apiVersion: v1
kind: Namespace
metadata:
  labels:
    name: media-center
  name: media-center
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: sc-escritorio
provisioner: kubernetes.io/no-provisioner
volumeBindingMode: WaitForFirstConsumer
---
apiVersion: v1
kind: PersistentVolume
metadata:
  labels:
    directory: downloads
  name: downloads
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: 3Ti
  local:
    path: /mnt/data/qb-downloads
  nodeAffinity:
    required:
      nodeSelectorTerms:
        - matchExpressions:
            - key: kubernetes.io/hostname
              operator: In
              values:
                - escritorio
  storageClassName: sc-escritorio
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: downloads-pvc
  namespace: media-center
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 200Gi
  selector:
    matchLabels:
      directory: downloads
  storageClassName: sc-escritorio
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: qbittorrent
  namespace: media-center
spec:
  selector:
    matchLabels:
      app: qbittorrent
  template:
    metadata:
      labels:
        app: qbittorrent
    spec:
      containers:
        - env:
            - name: TZ
              value: Europe/Lisbon
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: UMASK_SET
              value: "022"
          image: linuxserver/qbittorrent:14.2.0.99201912180418-6819-118af03ubuntu18.04.1-ls62
          imagePullPolicy: IfNotPresent
          name: qbittorrent
          resources:
            limits:
              cpu: 100m
              memory: 400Mi
          volumeMounts:
            - mountPath: /config
              name: qbittorrent-config
            - mountPath: /downloads
              name: downloads
      volumes:
        - name: qbittorrent-config
          persistentVolumeClaim:
            claimName: qbittorrent-config-pvc
        - name: downloads
          persistentVolumeClaim:
            claimName: downloads-pvc
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
  labels:
    app: qbittorrent
  name: qbittorrent-tcp
  namespace: media-center
spec:
  loadBalancerIP: 192.168.1.232
  ports:
    - name: qbittorrent-tcp-6881
      port: 6881
      protocol: TCP
      targetPort: 6881
    - name: qbittorrent-tcp-8080
      port: 8080
      protocol: TCP
      targetPort: 8080
  selector:
    app: qbittorrent
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
  labels:
    app: qbittorrent
  name: qbittorrent-udp
  namespace: media-center
spec:
  loadBalancerIP: 192.168.1.232
  ports:
    - name: qbittorrent-udp-6881
      port: 6881
      protocol: UDP
      targetPort: 6881
    - name: qbittorrent-udp-8080
      port: 8080
      protocol: UDP
      targetPort: 8080
  selector:
    app: qbittorrent
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: qbittorrent-config-pvc
  namespace: media-center
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jackett
  namespace: media-center
spec:
  selector:
    matchLabels:
      app: jackett
  template:
    metadata:
      labels:
        app: jackett
    spec:
      containers:
        - env:
            - name: TZ
              value: Europe/Lisbon
            - name: PUID
              value: "1000"
            - name: PGID
              value: "1000"
            - name: UMASK_SET
              value: "022"
          image: linuxserver/jackett:v0.14.49-ls56
          imagePullPolicy: IfNotPresent
          name: jackett
          resources:
            limits:
              cpu: 100m
              memory: 400Mi
          volumeMounts:
            - mountPath: /config
              name: jackett-config
            - mountPath: /downloads
              name: downloads-pvc
      volumes:
        - name: jackett-config
          persistentVolumeClaim:
            claimName: jackett-config-pvc
        - name: downloads-pvc
          persistentVolumeClaim:
            claimName: downloads-pvc-pvc
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
  labels:
    app: jackett
  name: jackett-tcp
  namespace: media-center
spec:
  loadBalancerIP: 192.168.1.231
  ports:
    - name: jackett-tcp-9117
      port: 9117
      protocol: TCP
      targetPort: 9117
  selector:
    app: jackett
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/allow-shared-ip: "true"
  labels:
    app: jackett
  name: jackett-udp
  namespace: media-center
spec:
  loadBalancerIP: 192.168.1.231
  ports:
    - name: jackett-udp-9117
      port: 9117
      protocol: UDP
      targetPort: 9117
  selector:
    app: jackett
  type: LoadBalancer
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: jackett-config-pvc
  namespace: media-center
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: local-path
